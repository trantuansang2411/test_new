name: Node.js CI Fast

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 5

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'npm'

    - name: Install dependencies (auth + product)
      run: |
        npm ci --include=dev --prefix auth
        npm ci --include=dev --prefix product
        npm install -g wait-on

    - name: Run Auth service in background
      env:
        MONGODB_AUTH_URI: ${{ secrets.MONGODB_AUTH_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
      run: |
        echo "Starting Auth service..."
        npm start --prefix auth &
        # dùng wait-on thay vì sleep
        npx wait-on http://localhost:3000/dashboard
        echo "✅ Auth service is ready!"

    - name: Seed test user & login
      env:
        LOGIN_TEST_USER: ${{ secrets.LOGIN_TEST_USER }}
        LOGIN_TEST_PASSWORD: ${{ secrets.LOGIN_TEST_PASSWORD }}
      run: |
        echo "Register + Login test user..."
        {
          curl -s -X POST http://localhost:3000/register \
            -H "Content-Type: application/json" \
            -d "{\"username\":\"${{ secrets.LOGIN_TEST_USER }}\",\"password\":\"${{ secrets.LOGIN_TEST_PASSWORD }}\"}" || true
          LOGIN_RESPONSE=$(curl -s -X POST http://localhost:3000/login \
            -H "Content-Type: application/json" \
            -d "{\"username\":\"${{ secrets.LOGIN_TEST_USER }}\",\"password\":\"${{ secrets.LOGIN_TEST_PASSWORD }}\"}")
        } &
        wait
        echo "Login response: $LOGIN_RESPONSE"

    - name: Run Auth tests
      env:
        MONGODB_AUTH_URI: ${{ secrets.MONGODB_AUTH_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
      run: npm test --prefix auth

    - name: Run Product tests
      env:
        MONGODB_PRODUCT_URI: ${{ secrets.MONGODB_PRODUCT_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        LOGIN_TEST_USER: ${{ secrets.LOGIN_TEST_USER }}
        LOGIN_TEST_PASSWORD: ${{ secrets.LOGIN_TEST_PASSWORD }}
        RABBITMQ_URI: amqp://guest:guest@localhost:5672
        RABBITMQ_QUEUE_PRODUCT: product_queue
        RABBITMQ_QUEUE_ORDER: order_queue
      run: npm test --prefix product
