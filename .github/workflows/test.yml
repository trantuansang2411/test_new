name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      fail-fast: false
      matrix:
        node-version: [22.x]
        service: [auth, product]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      working-directory: ./${{ matrix.service }}
      run: |
        echo "Installing dependencies for ${{ matrix.service }}"
        npm ci --include=dev

    # ✅ AUTH TEST
    - name: Run tests (Auth)
      if: matrix.service == 'auth'
      working-directory: ./auth
      env:
        MONGODB_AUTH_URI: ${{ secrets.MONGODB_AUTH_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
      run: npm test

    # ✅ PRODUCT TEST - cần Auth service chạy thật
    - name: Run tests for product
      if: matrix.service == 'product'
      env:
        MONGODB_AUTH_URI: ${{ secrets.MONGODB_AUTH_URI }}
        MONGODB_PRODUCT_URI: ${{ secrets.MONGODB_PRODUCT_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        LOGIN_TEST_USER: ${{ secrets.LOGIN_TEST_USER }}
        LOGIN_TEST_PASSWORD: ${{ secrets.LOGIN_TEST_PASSWORD }}
      run: |
        echo "⚙️ Starting Auth service for integration test..."
        cd auth
        npm ci --include=dev
        npm start &
        echo "⏳ Waiting for Auth service to be ready..."
        timeout 30 bash -c 'until curl -f http://localhost:3000/dashboard 2>/dev/null; do sleep 2; done' || echo "Auth service might not be ready"
        
        # Create test user
        echo "👤 Creating test user..."
        curl -X POST http://localhost:3000/register \
          -H "Content-Type: application/json" \
          -d "{\"username\":\"${{ secrets.LOGIN_TEST_USER }}\",\"password\":\"${{ secrets.LOGIN_TEST_PASSWORD }}\"}" || echo "User might already exist"

        # Test login
        echo "🔑 Testing login..."
        LOGIN_RESPONSE=$(curl -s -X POST http://localhost:3000/login \
          -H "Content-Type: application/json" \
          -d "{\"username\":\"${{ secrets.LOGIN_TEST_USER }}\",\"password\":\"${{ secrets.LOGIN_TEST_PASSWORD }}\"}")
        echo "Login response: $LOGIN_RESPONSE"

        cd ../product
        npm ci --include=dev
        echo "🚀 Running Product service tests..."
        npm test
